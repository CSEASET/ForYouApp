{"ETCS302":[{"paperTitle":"Compiler Design","paperCredits":4,"paperUnits":[{"unit":{"unitTitle":"Brief overview","unitDetails":"Brief overview of the compilation process, structure of compiler & its different phases, lexical analyzer, cross compiler, Bootstrapping, quick & dirty compiler, Shift-reduce parsing, operator- precedence parsing, topdown parsing, predictive parsing ,LL(1) and LL(k) grammar, bottom up parsing, SLR, LR(0), LALR parsing techniques"}},{"unit":{"unitTitle":"Design","unitDetails":"Design and implementation of a lexical analyzer and parsing using automated compiler construction tools(eg. Lex, YACC, PLY), Syntax-directed translation schemes, implementation of syntax directed translations, intermediate code, postfix notation, three address code, quadruples, and triples, translation of assignment statements, Boolean expressions, control statements, Semantic Analysis, Type Systems, Type Expressions, Type Checker, Type Conversion"}},{"unit":{"unitTitle":"Symbol table","unitDetails":"Symbol table, data structures and implementation of symbol tables, representing scope information. Run Time Storage Administration, implementation of a simple stack allocation scheme, storage allocation in block structured languages and non block structured languages, Error, Lexical-phase errors, syntacticphase errors, semantic errors."}},{"unit":{"unitTitle":"The principle sources of optimization","unitDetails":"The principle sources of optimization, loop optimization, the DAG representation of basic blocks, value number and algebraic laws, global dataflow analysis, Object programs, problems in code generation, a machine model, a single code generator, register allocation and assignment, code generation from DAGs, peephole optimization."}}]}]}